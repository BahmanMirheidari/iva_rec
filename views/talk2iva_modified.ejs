<!DOCTYPE html>
<html lang="en">
<head>
  <title>IVA</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">   
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>  
 
  <style>
    .disabledButton { color: silver; } 
    .hidden{ 
        display: none;
    }
    /* The container */
    .cust_container {
      display: block;
      position: relative;
      padding-left: 35px;
      margin-bottom: 12px;
      cursor: pointer;
      font-size: 22px;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    /* Hide the browser's default checkbox */
    .cust_container input {
      position: absolute;
      opacity: 0;
      cursor: pointer;
      height: 0;
      width: 0;
    }

    /* Create a custom checkbox */
    .checkmark {
      position: absolute;
      top: 0;
      left: 0;
      height: 40px;
      width: 40px;
      background-color: #eee;
    }

    /* On mouse-over, add a grey background color */
    .cust_container:hover input ~ .checkmark {
      background-color: #ccc;
    }

    /* When the checkbox is checked, add a blue background */
    .cust_container input:checked ~ .checkmark {
      background-color: #2196F3;
    }

    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
      content: "";
      position: absolute;
      display: none;
    }

    /* Show the checkmark when checked */
    .cust_container input:checked ~ .checkmark:after {
      display: block;
    }

    /* Style the checkmark/indicator */
    .cust_container .checkmark:after {
      left: 5px;
      top: 5px;
      width: 25px;
      height: 25px;
      border: solid white;
      border-width: 0px 8px 4px 0px;
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg);
    }
  </style> 
 
</head>
<body>  
  <script>
  var userID = "<%= user.userID %>";  
  var configuration = <%- JSON.stringify(user.configuration) %>
  var socket_uri = "<%= socket_uri %>";  
  var jquery = "<%= user.jquery %>";


  function detectOSBrowser(){
      var OSName="Unknown OS";
      var mobile="No";
      var nVer = navigator.appVersion;
    var nAgt = navigator.userAgent;
    var browserName  = navigator.appName;
    var fullVersion  = ''+parseFloat(navigator.appVersion);  
    var nameOffset,verOffset,ix;

    if (nVer.indexOf("Win")!=-1) OSName="Windows";
    if (nVer.indexOf("Mac")!=-1) OSName="MacOS";
    if (nVer.indexOf("X11")!=-1) OSName="UNIX";
    if (nVer.indexOf("Linux")!=-1) OSName="Linux";

    if (nAgt.match(/BlackBerry/i)) OSName="BlackBerry";
    if (nAgt.match(/Android/i)) OSName="Android";
    if (nAgt.match(/iPhone|iPad|iPod/i)) OSName="iOS";
    if (nAgt.match(/Opera Mini/i)) OSName="Opera";
    if (nAgt.match(/IEMobile/i)) OSName="IEMobile"; 

    // In Opera, the true version is after "Opera" or after "Version"
    if ((verOffset=nAgt.indexOf("Opera"))!=-1) {
     browserName = "Opera";
     fullVersion = nAgt.substring(verOffset+6);
     if ((verOffset=nAgt.indexOf("Version"))!=-1) 
       fullVersion = nAgt.substring(verOffset+8);
    }
    // In MSIE, the true version is after "MSIE" in userAgent
    else if ((verOffset=nAgt.indexOf("MSIE"))!=-1) {
     browserName = "MSIE";
     fullVersion = nAgt.substring(verOffset+5);
    }
    // In Chrome, the true version is after "Chrome" 
    else if ((verOffset=nAgt.indexOf("Chrome"))!=-1) {
     browserName = "Chrome";
     fullVersion = nAgt.substring(verOffset+7);
    }
    // In Safari, the true version is after "Safari" or after "Version" 
    else if ((verOffset=nAgt.indexOf("Safari"))!=-1) {
     browserName = "Safari";
     fullVersion = nAgt.substring(verOffset+7);
     if ((verOffset=nAgt.indexOf("Version"))!=-1) 
       fullVersion = nAgt.substring(verOffset+8);
    }
    // In Firefox, the true version is after "Firefox" 
    else if ((verOffset=nAgt.indexOf("Firefox"))!=-1) {
     browserName = "Firefox";
     fullVersion = nAgt.substring(verOffset+8);
    }
    // In most other browsers, "name/version" is at the end of userAgent 
    else if ( (nameOffset=nAgt.lastIndexOf(' ')+1) < 
              (verOffset=nAgt.lastIndexOf('/')) ) 
    {
     browserName = nAgt.substring(nameOffset,verOffset);
     fullVersion = nAgt.substring(verOffset+1);
     if (browserName.toLowerCase()==browserName.toUpperCase()) {
      browserName = navigator.appName;
     }
    }
    // trim the fullVersion string at semicolon/space if present
    if ((ix=fullVersion.indexOf(";"))!=-1)
       fullVersion=fullVersion.substring(0,ix);
    if ((ix=fullVersion.indexOf(" "))!=-1)
       fullVersion=fullVersion.substring(0,ix); 

    all_details ='os:'+OSName+ ', browser:' +browserName+', fullVersion:'+fullVersion+', appName:'+navigator.appName+', userAgent:'+navigator.userAgent;  

    return {'all_details':all_details, 'os':OSName, 'browser':browserName, 'fullVersion':fullVersion, 'appName':navigator.appName, 'userAgent':navigator.userAgent}  
    }

    function loadjscssfile(filename, filetype){
        if (filetype=="js"){ //if filename is a external JavaScript file
            var fileref=document.createElement('script');
            fileref.setAttribute("type","text/javascript");
            fileref.setAttribute("src", filename);
        }
        else if (filetype=="css"){ //if filename is an external CSS file
            var fileref=document.createElement("link");
            fileref.setAttribute("rel", "stylesheet");
            fileref.setAttribute("type", "text/css");
            fileref.setAttribute("href", filename);
        }
        if (typeof fileref!="undefined")
            document.getElementsByTagName("head")[0].appendChild(fileref)
    }
    var filesadded="" //list of files already added
    function checkloadjscssfile(filename, filetype){
        if (filesadded.indexOf("["+filename+"]")==-1){
            loadjscssfile(filename, filetype);
            filesadded+="["+filename+"]"; //List of files added in the form "[filename1],[filename2],etc"
        }
        //else
        //    alert("file already added!")
    }

    osBr = detectOSBrowser();
    if (osBr.browser.match(/Safari/i)){  
      alert(typeof MediaRecorder === undefined );

      if(typeof MediaRecorder  === undefined || typeof MediaRecorder == undefined){
        $('#mediarecorder_modal_safari').modal('show');
      }
      else{
        checkloadjscssfile("js/iva_safari.js", "js");
      } 
    }
    else {
      if(typeof MediaRecorder  === undefined || typeof MediaRecorder == undefined){
        $('#mediarecorder_modal_others').modal('show');
      }
      else{
        checkloadjscssfile("js/iva.js", "js"); 
      }
    }

  </script>
  <script type='text/javascript' src="js/RecordRTC.js"></script>
  <!--<script type='text/javascript' src="js/iva_modified.js"></script>   -->
  <script type="text/javascript" src="js/getUserMedia.js"></script>  
  <div class="row"> 
    <div class="header text-center" id="header" style="margin-bottom:3%;margin-left:3%;margin-top:3%"> 
      <div id="divWebcam" class="container float-right" style="background-color:white;width: 20%;margin-top:2%;margin-right:2%">  
        <video id="video" muted="true" class="img-responsive" style="width: 95%">
        </video> 
        <canvas id="mycanvas" class="img-responsive" style="width: 95%"> 
        </canvas>  
        <div id="mylog">  
          </div>  
      </div>  

      <img src="Images/sitran_logo.png" alt="Sitran logo" class="img-thumbnail rounded img-responsive pull-left" style="width: 75%;margin-bottom:2%;margin-left:2%;margin-top:2%"> 
      <div class="img-responsive pull-right" style="width: 50%;"> 
        <button type="button" class="btn-lg btn-primary hidden" id="repeatMessageButton" name="repeatMessageButton" style="width: 47%;margin-left:2%;margin-top:2%">Repeat</button> 
        <button type="button" class="btn-lg btn-primary hidden" style="width: 40%;margin-left:5%" id="nextMessageButton" name="nextMessageButton">Next</button>  
      </div>  
    </div> 
  </div>   

<div class="modal fade hidden" tabindex="-1" role="dialog" id="mediarecorder_modal_safari">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">MediaRecorder is not enabled</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>MediaRecorder is not enabled in your Safari browser. Go to Safari Preferences, Advanced and first tick "Show Develop menu in menu bar". Then go to Develop, Experimental Features and enable MediaRecorder. For more information please refer to: https://www.educative.io/edpresso/how-to-enable-the-mediarecorder-api-for-safari</p>
      </div>
      <div class="modal-footer"> 
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade hidden" tabindex="-1" role="dialog" id="mediarecorder_modal_others">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">MediaRecorder is not supported</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>MediaRecorder is not enabled in your Browser. Please use the latest Google Chrome browser.</p>
      </div>
      <div class="modal-footer"> 
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

  <div id="hidden_audio" style="display:none">
    <audio id="audio" style="display:none" controls src="Buzzer/Silence.mp3">
    </audio>
  </div>

  <div id="dynamic" class="container col-sm-11 hidden">
    <div class="row"> 
        <div id="dynamic_header"> 
        </div> 
    </div>

    <div class="row"> 
        <div id="dynamic_title"> 
        </div> 
    </div>

    <div class="row"> 
        <div id="dynamic_body"> 
        </div> 
    </div>

    <button type="button" class="btn-lg btn-primary" id="backSurveyButton" name="backSurveyButton">Back</button>
    <button type="button" class="btn-lg btn-primary" id="nextSurveyButton" name="nextSurveyButton">Next</button> 
  </div>   

  <div class="container col-sm-12"> 
  <div class="row">  
    <div class="col-sm-5 pull-left hidden" id="divVideo"> 
      <video id="videoMp4" class="img-responsive" style="width: 90%">
       <source src="mp4/q_0.mp4" type="video/mp4" />
         HTML5 Video is required for this example. 
      </video>  
      
    </div> 

    <div class="col-sm-7 pull-right">

      <h2>
        <div class="alert alert-info hidden" id="divAlert">
        Press "Start" button to start recording 
        </div> 
      </h2>

      <button type="button" class="btn-lg btn-primary hidden" id="startAvatarButton" name="startAvatarButton">Start</button>   
      <h3>
        <div id="divQuestionNo" class="alert alert-info hidden"> 
        </div>
      </h3>  

      <div id="divDescriptionImage" class="hidden"> 
        <img id="imgDescription" src="Images/cookietheft.gif" alt="Cookie Theft" class="img-responsive" style="width: 90%">
      </div>  

      <div class="container col-xs-6 pull-right hidden" id="divPar">   
        <div class="alert alert-info" id="divExtraMessage"> 
        </div> 
        <div class="alert alert-success" id="divMessage"> 
        </div> 
      </div>

      <h1 style="font-size: 400%;">
        <div id="divStopWatch" class="alert alert-warning hidden"> 
        </div> 
      </h1>  
    </div> 
  </div>  
</body>
</html>
